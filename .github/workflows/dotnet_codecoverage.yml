name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ubuntu:
   runs-on: ubuntu-latest
   timeout-minutes: 10

   steps:

    - name: Checkout
      uses: actions/checkout@v3
    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test

    # Code coverage
    - name: code coverage
      run : dotnet test --collect:"XPlat Code Coverage"
      
  # upload artifacts
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: ./TestProject1/TestResults/**/coverage.cobertura.xml
    - name: Install reportgenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Generate code coverage report
      run: reportgenerator "-reports:./TestProject1/TestResults/**/coverage.cobertura.xml" "-targetdir:./.github/" "-reporttypes:Html"
    - name: Check code coverage percentage
      run: |
        threshold=70
        coverage=$(cat ./.github/index.htm | grep -E -o "[0-9]{1,3}(\.[0-9]{1,2})?%?" | head -n 1 | tr -d '%')
        if [ $(echo "$coverage >= $threshold" | bc -l) -eq 0 ]; then
          echo "Code coverage is below $threshold% ($coverage%)"
          exit 1
        fi
